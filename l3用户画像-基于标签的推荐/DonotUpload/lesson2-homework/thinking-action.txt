lesson2-thinking-action
1.K-means工作原理：
原理：依据数据样本之间的距离将样本划分为K个簇，让不同簇之间的距离最大化。
K值的选择：对于K-Means算法，一般来说，根据对数据的先验经验选择k值，如果没有先验知识，
则可以通过交叉验证选择一个合适的k值。
实现步骤：输入数据；选择K值与最大迭代次数N；输出簇

K-mens到K-means++：对质心的选择方法不再随机，先选择一哥聚类中心， 计算其他点与该
聚类中心的距离，选择最近的，所谓新的聚类中心，直至选择出K个聚类中心为止

K-means到elkan K-means：
K-means++要计算所有样本点到所有质心的距离，elkan的目的是减少距离的计算
elkan的原理是：两边之和大于第三边，两边之差小于第三边的三角形性质




2.pandas的DataFrame中按照元素中局部元素进行匹配查询，
例如查找出name列中姓张的，
df['name'].str.contains['张']

3.TPOT原理的了解与使用其进行机器模型的选择与最优化

4.Dictvectorizer：用于将特征转化为标签

5.距离的表达方式：
推荐系统中常用的相似性距离度量：杰卡德相似度，余弦相似度

6.数据归一化：min-max；Z-score

7.对推荐算法候选集的评测指标：准确率，召回率，F值，覆盖率

8.基于内容的推荐实现步骤：
    1.构建item1:{tag1:score1,tag2:score2.......}
              item2:{tag1:score1,tag2:score2.......}
       构建user1:{tag1:score1,tag2:score2.......}
              user2:{tag1:score1,tag2:score2.......}

    2.通过以上构建的两个数据，依次计算每个user与所有item的相似度sim
       得到数据user1:{item1:sim1,item2:sim2....}
                    user2:{item1:sim1,item2:sim2....}

    3.根据相似度倒排并过滤掉用户已观看的item，得到用户的推荐列表

9.使用TPOT来对mnist数据进行分类

10.对泰坦尼克数据进行清洗

11.对steam-video-games数据进行清洗

12.如何给item打标签

13.基于delicious数据实现simpletagbased并对其改进

14.使用TPOT对清洗后的泰坦尼克数据进行乘客生存预测

15.采用pandas的索引器，切片操作来定位缺失值，异常值的位置，然后获取这些缺失值与异常值的index，column
，放入list，然后通过index和column逐个定位缺失值与异常值的位置，来进行缺失值与异常值的替换。
这种方法的优点在于不用遍历缺失值所在列，减少循环，效率提升
















